package Leetcode;

public class RemovePalindomicSubsequence {
    public static void main(String[] args) {
        String str = "abb";
        System.out.println(removePalindromeSub(str));
    }

    public static int removePalindromeSub(String s) {

        if (s.length() == 0) return 0;
        if (isPalindrome(s)) return 1;
        else return 2;
    }

    private static boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;
        while (left < right) {
            if (!(s.charAt(left++) == s.charAt(right--))) {
                return false;
            }
        }
        return true;
    }
}



/*
1332. Remove Palindromic Subsequences
Easy
1.5K
1.6K
Companies
You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.



Example 1:

Input: s = "ababa"
Output: 1
Explanation: s is already a palindrome, so its entirety can be removed in a single step.
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "".
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "".
Remove palindromic subsequence "baab" then "b".
 */